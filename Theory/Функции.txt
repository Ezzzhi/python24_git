---!Создание функции---
Создается до начала основного тела программы, предваряется оператором def, текс функции идет после двоеточия
def function():			i.e.
    a = 'b'
    print(a)


---!Пространство имен---
Существует несколько видов пространства имен:
Локальное пространство имен - имена, которые мы используем внутри каких-либо функций, к ним нельзя обратиться вне функции
Глобальное пространство имен - включает в себя все, что есть в нашей программе, исключая лишь локальное пространство
Встроенное пространство имен - имена каких-либо встроенных функций
Чтобы внутри функции использовать глобальные имена, нужно объявить их в начале функции со словом 'global':
def function():			i.e.
    global a, b

---!Вызов функции---
для вызова функции нам нужно написать ее имя, открыть и закрыть скобки
принимающая функция - принимает параметры и выдает результат
параметры указываются в скобках при определении функции (подробнее см. !Параметры)
при вызове такой функции надо передать параметры, если их нет, или переданы не все или избыток - ошибка

параметры могут быть вообще не связаны между собой. Они могут быть совершенно разных типов, главное, чтобы этот тип подходил под совершаемые с этим параметром операции

---!Параметры функции (аргументы)---
Позиционные аргументы - аргументы передаваемые при вызове по их порядку в объявлении функции. Именованные аргументы - аргументы передаваемые по их имени, указанному при объвлении функции
Параметры можно передать все, через запятую, и они встанут по порядку (позиционные). А можно частично, указав имя параметра (именные):
function(c=2)   i.e.
или 
function(а, b, c=2) 
Таким образом, мы можем задать значения одновременно позиционным и именованным параметрам.
Важно, чтобы позиционные параметры шли перед именованными. Но если мы передаем все именованные параметры, то они могут идти не по порядку

Чтобы при определении функции указать, что параметр/ы всегда будут именованы, перед ними нужно поставить знак (*,). Позиционные параметры должны идти до этого знака:
function(а, *, b, c=2)   i.e.
а - позиционный, b, c - именованные

---!Параметры по умолчанию---
Параметры можно передать по умолчанию, указав при определении функции их значения. Они будут использоваться, если не передать параметры при вызове функции.
те, которые имеют значение по умолчанию, всегда идут после тех, у которых значение по умолчанию отсутствует.
(если есть именнованные и нет, то в каждой группе сначала параметры без значения, потом со значением)

---!Аргументы переменной длины (*args и **kwargs)---
Python позволяет определять функции, даже если мы не знаем, сколько аргументов она должна принимать:

*args используют, когда неясно, сколько позиционных аргументов у нас есть. Звёздочка * перед args указывает на то, что все позиционные аргументы, переданные при вызове функции, должны быть собраны в кортеж tuple и присвоены args.
**kwargs используют, чтобы передать именованные аргументы в виде словаря (dictionary), когда мы не знаем, сколько их у нас. Две звёздочки (**) перед kwargs означают, что все именованные аргументы должны быть собраны в словарь и присвоены kwargs.


-----
!Пространство имен