Python типы данных

Команды (функции): 
print() - вывести на экран
type() - вывести тип переменной на экран
input() - ввод данных с клавиатуры, параметр - текст на экране перед вводом
len() - возвращает длину строки
__sizeof__ - возвращает размер занимаемой памяти (list.__sizeof__())

Типы данных (некоторые):
https://urban-university.ru/members/courses/course999421818026/20230926-0000spargalka-po-tipam-dannyh-v-azyke-programmirovania-python-471297949673
типы бывают изменяемые и неизменяемые - пока непонятно, о чем это
числа - целые и флоат - неизменяемые

int - integer - целое число
float - число с плавающей точкой
str - string - строка 
bool - boolean - логический тип данных, True / False
list - список (напр., list = [1, 2, 2, 5])
tuple - тьюпл, кортеж - неизменяемый список (нельзя присвоить новое значение элементу кортежа)
dict - dictionary - словарь; в фигурных скобках пара ключ: значение, ключ в кавычках, разделитель запятая (напр., dict = {'a': 5, 'b': 6})
set - множество 

если складывать int и float, то получим float 

Операции с данными:
// - целочисленное деление, возвращает int, отбрасывая дробную часть (НЕ округление до целого)
/ - обычное деление, возвращает float 
% - остаток от деления
сравнение: <, >, >=, <=, ==, != (возвращает bool)
and / ore - операции для сложного сравнения (и / или)
** - возведение в степень



чтобы изменить тип данных, нужно использовать команду с названием того типа данных, на которые нужно изменить. Например, int(x)

# - комментарий


строки можно складывать (конкатенация), другие мат.операции проводить нельзя
строки можно умножать
print ('Hello' * 5)

питон поддерживает динамическую типизацию данных

вывод подстроки: print(name[0:3:2])
где name - имя переменной, содержащей искомую строку
0 - начальный символ подстроки (обязательный параметр, индекс первого символа строки - 0)
3 - индекс символа, следующего за последним символом отображаемого интервала
2 - шаг показа последовательности символов

любой из этих символов можно опустить, оставив двоеточие
в этом случае по умолчанию считается на первом месте - первый символ, на втором месте - последний символ, на третьем - шаг 1

можно искать символы с конца, указав отрицательное значение индекса
при отрицательном шаге поиск будет идти в обратном направлении

41 вопрос о работе со строками в Python
https://habr.com/ru/companies/ruvds/articles/500296/
0.015731400111690164
0.02073079999536276

В 4 задании вам необходимо строку преобразовать в число с точкой float(), умножить на 10, получившийся результат преобразовать в целочисленный тип int(), сделать остаток от деления % 10.
С уважением, Владимир

f-строки:
print(f'Hello, {name}')